name: GitHub Docker CI/CD Pipeline

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  REPO_NAME: ${{ secrets.REPO_NAME }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v2

      - name: Installer Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Installer les dépendances
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Installer black
        run: pip install black

      - name: Vérifier la conformité du code
        run: black .

  cd_pipeline:
    runs-on: ubuntu-latest
    needs: [ci_pipeline]
    steps:
      - name: Checkout du code
        uses: actions/checkout@v2

      - name: Obtenir la date actuelle
        id: date
        run: echo "DATE=$(date +'%Y-%m-%d--%H-%M-%S' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Construire l'image Docker
        run: docker build . --file Dockerfile --tag $(echo "$DOCKER_USER/$REPO_NAME:${{ env.DATE }}" | tr '[:upper:]' '[:lower:]')

      - name: Connexion à Docker Hub
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin

      - name: Push de l'image sur Docker Hub
        run: docker push $(echo "$DOCKER_USER/$REPO_NAME:${{ env.DATE }}" | tr '[:upper:]' '[:lower:]')
